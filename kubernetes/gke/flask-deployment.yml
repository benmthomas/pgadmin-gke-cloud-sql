apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    name: flask
  name: flask
spec:
  replicas: 1
  selector:
    matchLabels:
      app: flask
  template:
    metadata:
      labels:
        app: flask
    spec:
      serviceAccount: postgres-ksa
      containers:
        - image: bmtben/flask-kubernetes:latest
          imagePullPolicy: Always
          name: flask
          env:
            - name: FLASK_ENV
              value: development
            - name: APP_SETTINGS
              value: project.config.DevelopmentConfig
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  key: user
                  name: postgres-credentials
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: password
                  name: postgres-credentials
          resources: {}
          ports:
            - containerPort: 5000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - image: gcr.io/cloudsql-docker/gce-proxy:1.17
          imagePullPolicy: Always
          name: cloudsql-proxy
          securityContext:
            runAsNonRoot: true
            allowPrivilegeEscalation: false
          resources: {}
          # ConfigMap to load postgres db instance connection string
          env:
            - name: INSTANCE_CONNECTION
              valueFrom:
                configMapKeyRef:
                  name: connectionname
                  key: connectionname
          command: 
            - "/cloud_sql_proxy"
            # - "-instances=stately-minutia-318001:us-central1:stately-minutia-318001-pg-instance-32ce2dd3=tcp:5432"
            - "-instances=$(INSTANCE_CONNECTION)=tcp:5432"
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
